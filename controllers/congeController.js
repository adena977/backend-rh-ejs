// üìÅ controllers/congeController.js
const Conge = require('../models/congeModel');
const Employe = require('../models/employeModel');
const db = require('../config/db');
const Notification = require('../models/notificationModel');

exports.index = async (req, res, next) => {
    try {
        const conges = await Conge.getAll();
        res.render('conges/index', {
            title: 'Liste des cong√©s',
            page: 'conges',
            conges
        });
    } catch (err) { next(err); }
};

exports.showAddForm = async (req, res, next) => {
    try {
        const employes = await Employe.getAll();
        res.render('conges/add', {
            title: 'Nouveau cong√©',
            page: 'conges',
            employes
        });
    } catch (err) { next(err); }
};

exports.store = async (req, res, next) => {
    try {
        const data = req.body;

        // üë§ Ajoute l'employ√©_id depuis la session
        data.employe_id = req.session.user.employe_id;

        await Conge.create(data);

        // üîî Notifier tous les admins
        const [admins] = await db.query(`SELECT id FROM utilisateurs WHERE role = 'admin'`);
        for (const admin of admins) {
            await Notification.create({
                destinataire_id: admin.id,
                message: `Nouvelle demande de cong√© de l'employ√© ID ${data.employe_id}`
            });
        }

        req.flash('success_msg', 'Demande de cong√© envoy√©e avec succ√®s');
        res.redirect('/conges/mes-conges');
    } catch (err) {
        next(err);
    }
};


exports.showEditForm = async (req, res, next) => {
    try {
        const id = req.params.id;
        const conge = await Conge.getById(id);
        const employes = await Employe.getAll();
        if (!conge) {
            req.flash('error_msg', 'Cong√© introuvable');
            return res.redirect('/conges');
        }
        res.render('conges/edit', {
            title: 'Modifier un cong√©',
            page: 'conges',
            conge,
            employes
        });
    } catch (err) { next(err); }
};

exports.update = async (req, res, next) => {
    try {
        const id = req.params.id;
        const data = req.body;

        await Conge.update(id, data);

        // üß† R√©cup√©rer l'employ√© concern√© par le cong√©
        const [rows] = await db.query('SELECT employe_id FROM conges WHERE id = ?', [id]);
        const employe_id = rows[0]?.employe_id;

        // üîç Trouver l'utilisateur correspondant
        const [users] = await db.query('SELECT id FROM utilisateurs WHERE employe_id = ?', [employe_id]);
        const utilisateur = users[0];

        // üîî Cr√©er la notification
        if (utilisateur) {
            await Notification.create(
                utilisateur.id,
                `Votre demande de cong√© a √©t√© ${data.statut}`
            );
        }

        req.flash('success_msg', 'Statut du cong√© modifi√© avec succ√®s');
        res.redirect('/conges');
    } catch (err) {
        next(err);
    }
};



exports.destroy = async (req, res, next) => {
    try {
        const id = req.params.id;
        await Conge.delete(id);
        req.flash('success_msg', 'Cong√© supprim√© avec succ√®s');
        res.redirect('/conges');
    } catch (err) { next(err); }
};

exports.myLeaves = async (req, res, next) => {
    try {
        const employeId = req.session.user.employe_id;
        const conges = await Conge.getByEmployeId(employeId);
        res.render('conges/mes_conges', {
            title: 'Mes cong√©s',
            page: 'conges',
            conges
        });
    } catch (err) { next(err); }
};
// Afficher le formulaire de demande de cong√©
exports.showRequestForm = (req, res) => {
    res.render('conges/demande', {
        title: 'Demande de cong√©',
        user: req.session.user
    });
};

// Traiter la soumission du formulaire
exports.submitRequest = async (req, res, next) => {
    try {
        const employeId = req.session.user.employe_id; // Id employ√© connect√©

        const { date_debut, date_fin, type, motif } = req.body;

        // Valider les donn√©es ici (dates coh√©rentes, etc.)

        // Ins√©rer la demande dans la base
        await db.query(
            `INSERT INTO conges (employe_id, date_debut, date_fin, type, motif, statut) VALUES (?, ?, ?, ?, ?, 'en attente')`,
            [employeId, date_debut, date_fin, type, motif]
        );

        req.flash('success_msg', 'Demande de cong√© envoy√©e avec succ√®s');
        res.redirect('/conges/mes-conges');
    } catch (err) {
        next(err);
    }
};
